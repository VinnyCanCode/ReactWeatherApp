{"ast":null,"code":"var _jsxFileName = \"/Users/vincentwnyamu/Documents/CodingPractice/React/weather-dashboard/dashboard/src/components/WeatherIcon.js\";\nimport React from 'react';\nimport ReactAnimatedWeather from 'react-animated-weather';\n\nconst typeOfIcon = icon => {\n  switch (icon.toUpperCase()) {\n    case 'CLEAR-DAY':\n      return 'CLEAR_DAY';\n\n    case 'CLEAR-NIGHT':\n      return 'CLEAR_NIGHT';\n\n    case 'PARTLY-CLOUDY-DAY':\n      return 'PARTLY_CLOUDY_DAY';\n\n    case 'PARTLY-CLOUDY-NIGHT':\n      return 'PARTLY_CLOUDY_NIGHT';\n\n    case 'CLOUDY':\n      return 'CLOUDY';\n\n    case 'RAIN':\n      return 'RAIN';\n\n    case 'SLEET':\n      return 'SLEET';\n\n    case 'SNOW':\n      return 'SNOW';\n\n    case 'WIND':\n      return 'WIND';\n\n    case 'FOG':\n      return 'FOG';\n\n    default:\n      break;\n  }\n};\n\nconst colors = {\n  main: '#111',\n  moon: '#353545',\n  fog: '#CCC',\n  fogbank: '#AAA',\n  light_cloud: '#888',\n  cloud: '#666',\n  dark_cloud: '#444',\n  thunder: '#FF0',\n  snow: '#C2EEFF',\n  hail: '#CCF',\n  sleet: '#C2EEFF',\n  wind: '#777',\n  leaf: '#2C5228',\n  rain: '#7FDBFF',\n  sun: '#FFDC00'\n};\n\nconst WeatherIcon = props => {\n  if (!props.icon) {\n    return `Loading...`;\n  }\n\n  console.log(typeOfIcon(props.icon));\n  console.log(props.icon);\n  console.log(colors[props.icon]);\n  return React.createElement(ReactAnimatedWeather, {\n    icon: `${typeOfIcon(props.icon)}` // color={colors[props.icon]}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  });\n};\n\nexport default WeatherIcon;","map":{"version":3,"sources":["/Users/vincentwnyamu/Documents/CodingPractice/React/weather-dashboard/dashboard/src/components/WeatherIcon.js"],"names":["React","ReactAnimatedWeather","typeOfIcon","icon","toUpperCase","colors","main","moon","fog","fogbank","light_cloud","cloud","dark_cloud","thunder","snow","hail","sleet","wind","leaf","rain","sun","WeatherIcon","props","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;;AAEA,MAAMC,UAAU,GAAGC,IAAI,IAAI;AACzB,UAAQA,IAAI,CAACC,WAAL,EAAR;AACE,SAAK,WAAL;AACE,aAAO,WAAP;;AACF,SAAK,aAAL;AACE,aAAO,aAAP;;AACF,SAAK,mBAAL;AACE,aAAO,mBAAP;;AACF,SAAK,qBAAL;AACE,aAAO,qBAAP;;AACF,SAAK,QAAL;AACE,aAAO,QAAP;;AACF,SAAK,MAAL;AACE,aAAO,MAAP;;AACF,SAAK,OAAL;AACE,aAAO,OAAP;;AACF,SAAK,MAAL;AACE,aAAO,MAAP;;AACF,SAAK,MAAL;AACE,aAAO,MAAP;;AACF,SAAK,KAAL;AACE,aAAO,KAAP;;AACF;AACE;AAtBJ;AAwBD,CAzBD;;AA2BA,MAAMC,MAAM,GAAG;AACbC,EAAAA,IAAI,EAAE,MADO;AAEbC,EAAAA,IAAI,EAAE,SAFO;AAGbC,EAAAA,GAAG,EAAE,MAHQ;AAIbC,EAAAA,OAAO,EAAE,MAJI;AAKbC,EAAAA,WAAW,EAAE,MALA;AAMbC,EAAAA,KAAK,EAAE,MANM;AAObC,EAAAA,UAAU,EAAE,MAPC;AAQbC,EAAAA,OAAO,EAAE,MARI;AASbC,EAAAA,IAAI,EAAE,SATO;AAUbC,EAAAA,IAAI,EAAE,MAVO;AAWbC,EAAAA,KAAK,EAAE,SAXM;AAYbC,EAAAA,IAAI,EAAE,MAZO;AAabC,EAAAA,IAAI,EAAE,SAbO;AAcbC,EAAAA,IAAI,EAAE,SAdO;AAebC,EAAAA,GAAG,EAAE;AAfQ,CAAf;;AAkBA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAC3B,MAAI,CAACA,KAAK,CAACnB,IAAX,EAAiB;AACf,WAAQ,YAAR;AACD;;AAEDoB,EAAAA,OAAO,CAACC,GAAR,CAAYtB,UAAU,CAACoB,KAAK,CAACnB,IAAP,CAAtB;AACAoB,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACnB,IAAlB;AAEAoB,EAAAA,OAAO,CAACC,GAAR,CAAYnB,MAAM,CAACiB,KAAK,CAACnB,IAAP,CAAlB;AAEA,SACE,oBAAC,oBAAD;AACE,IAAA,IAAI,EAAG,GAAED,UAAU,CAACoB,KAAK,CAACnB,IAAP,CAAa,EADlC,CAEE;AAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAMD,CAhBD;;AAkBA,eAAekB,WAAf","sourcesContent":["import React from 'react';\nimport ReactAnimatedWeather from 'react-animated-weather';\n\nconst typeOfIcon = icon => {\n  switch (icon.toUpperCase()) {\n    case 'CLEAR-DAY':\n      return 'CLEAR_DAY';\n    case 'CLEAR-NIGHT':\n      return 'CLEAR_NIGHT';\n    case 'PARTLY-CLOUDY-DAY':\n      return 'PARTLY_CLOUDY_DAY';\n    case 'PARTLY-CLOUDY-NIGHT':\n      return 'PARTLY_CLOUDY_NIGHT';\n    case 'CLOUDY':\n      return 'CLOUDY';\n    case 'RAIN':\n      return 'RAIN';\n    case 'SLEET':\n      return 'SLEET';\n    case 'SNOW':\n      return 'SNOW';\n    case 'WIND':\n      return 'WIND';\n    case 'FOG':\n      return 'FOG';\n    default:\n      break;\n  }\n};\n\nconst colors = {\n  main: '#111',\n  moon: '#353545',\n  fog: '#CCC',\n  fogbank: '#AAA',\n  light_cloud: '#888',\n  cloud: '#666',\n  dark_cloud: '#444',\n  thunder: '#FF0',\n  snow: '#C2EEFF',\n  hail: '#CCF',\n  sleet: '#C2EEFF',\n  wind: '#777',\n  leaf: '#2C5228',\n  rain: '#7FDBFF',\n  sun: '#FFDC00'\n};\n\nconst WeatherIcon = props => {\n  if (!props.icon) {\n    return `Loading...`;\n  }\n\n  console.log(typeOfIcon(props.icon));\n  console.log(props.icon);\n\n  console.log(colors[props.icon]);\n\n  return (\n    <ReactAnimatedWeather\n      icon={`${typeOfIcon(props.icon)}`}\n      // color={colors[props.icon]}\n    />\n  );\n};\n\nexport default WeatherIcon;\n"]},"metadata":{},"sourceType":"module"}