{"ast":null,"code":"var _jsxFileName = \"/Users/vincentwnyamu/Documents/CodingPractice/React/weather-dashboard/src/components/PlacesAutoComplete.js\";\nimport React, { Component } from 'react';\nimport GooglePlacesAutocomplete from 'react-google-places-autocomplete';\nimport { geocodeByPlaceId } from 'react-google-places-autocomplete';\nimport { geocodeByAddress, getLatLng } from 'react-google-places-autocomplete'; // If you want to use the provided css\n\nimport 'react-google-places-autocomplete/dist/assets/index.css';\n\nclass PlacesAutoComplete extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      address: null\n    };\n\n    this.getResult = async place_id => {\n      await geocodeByPlaceId(place_id).then(results => console.log(results)).catch(error => console.error(error))(place_id);\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(GooglePlacesAutocomplete, {\n      onSelect: ({\n        place_id\n      }) => this.getResult(place_id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default PlacesAutoComplete;","map":{"version":3,"sources":["/Users/vincentwnyamu/Documents/CodingPractice/React/weather-dashboard/src/components/PlacesAutoComplete.js"],"names":["React","Component","GooglePlacesAutocomplete","geocodeByPlaceId","geocodeByAddress","getLatLng","PlacesAutoComplete","state","address","getResult","place_id","then","results","console","log","catch","error","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,wBAAP,MAAqC,kCAArC;AACA,SAASC,gBAAT,QAAiC,kCAAjC;AACA,SAASC,gBAAT,EAA2BC,SAA3B,QAA4C,kCAA5C,C,CACA;;AACA,OAAO,wDAAP;;AAEA,MAAMC,kBAAN,SAAiCL,SAAjC,CAA2C;AAAA;AAAA;AAAA,SACzCM,KADyC,GACjC;AAAEC,MAAAA,OAAO,EAAE;AAAX,KADiC;;AAAA,SAGzCC,SAHyC,GAG7B,MAAMC,QAAN,IAAkB;AAC5B,YAAMP,gBAAgB,CAACO,QAAD,CAAhB,CACHC,IADG,CACEC,OAAO,IAAIC,OAAO,CAACC,GAAR,CAAYF,OAAZ,CADb,EAEHG,KAFG,CAEGC,KAAK,IAAIH,OAAO,CAACG,KAAR,CAAcA,KAAd,CAFZ,EAEkCN,QAFlC,CAAN;AAGD,KAPwC;AAAA;;AASzCO,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,wBAAD;AACE,MAAA,QAAQ,EAAE,CAAC;AAAEP,QAAAA;AAAF,OAAD,KAAkB,KAAKD,SAAL,CAAeC,QAAf,CAD9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAOD;;AAjBwC;;AAoB3C,eAAeJ,kBAAf","sourcesContent":["import React, { Component } from 'react';\nimport GooglePlacesAutocomplete from 'react-google-places-autocomplete';\nimport { geocodeByPlaceId } from 'react-google-places-autocomplete';\nimport { geocodeByAddress, getLatLng } from 'react-google-places-autocomplete';\n// If you want to use the provided css\nimport 'react-google-places-autocomplete/dist/assets/index.css';\n\nclass PlacesAutoComplete extends Component {\n  state = { address: null };\n\n  getResult = async place_id => {\n    await geocodeByPlaceId(place_id)\n      .then(results => console.log(results))\n      .catch(error => console.error(error))(place_id);\n  };\n\n  render() {\n    return (\n      <div>\n        <GooglePlacesAutocomplete\n          onSelect={({ place_id }) => this.getResult(place_id)}\n        />\n      </div>\n    );\n  }\n}\n\nexport default PlacesAutoComplete;\n"]},"metadata":{},"sourceType":"module"}