{"ast":null,"code":"var _jsxFileName = \"/Users/vincentwnyamu/Documents/CodingPractice/React/weather-dashboard/src/components/TodaysView.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { weatherData } from '../actions';\nimport WeatherIcon from './WeatherIcon';\n\nclass TodaysView extends Component {\n  componentDidUpdate(prevState) {\n    if (this.props.searchedItem.length !== 0) {\n      if (this.props.weather === prevState.weather) {\n        this.props.weatherData();\n      }\n    }\n  }\n\n  renderInput() {\n    if (Object.keys(this.props.weather).length === 0) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, \"Hi there\");\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"Today:\", ' ', this.unixToDay(this.props.weather.data.currently.time, 'Date')), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"Location: \", this.props.locationName), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Temperature:\", ' ', Math.round(this.props.weather.data.currently.temperature), \"\\xB0 F\"), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Feels Like\", ' ', Math.round(this.props.weather.data.currently.apparentTemperature)), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Sunset Time:\", ' ', this.unixToStandardConverter(this.props.weather.data.daily.data[0].sunsetTime)), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"-------------------\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Chance of rain\"), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, this.unixToStandardConverter(this.props.weather.data.hourly.data[2].time), \":\", ' ', this.decimalToPercent(this.props.weather.data.hourly.data[2].precipProbability)), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, this.unixToStandardConverter(this.props.weather.data.hourly.data[4].time), \":\", this.decimalToPercent(this.props.weather.data.hourly.data[4].precipProbability)), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, this.unixToStandardConverter(this.props.weather.data.hourly.data[6].time), \":\", this.decimalToPercent(this.props.weather.data.hourly.data[6].precipProbability)), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, this.unixToStandardConverter(this.props.weather.data.hourly.data[8].time), \":\", this.decimalToPercent(this.props.weather.data.hourly.data[8].precipProbability)), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, this.unixToStandardConverter(this.props.weather.data.hourly.data[10].time), \":\", this.decimalToPercent(this.props.weather.data.hourly.data[10].precipProbability)), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, this.unixToStandardConverter(this.props.weather.data.hourly.data[12].time), \":\", this.decimalToPercent(this.props.weather.data.hourly.data[12].precipProbability)));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"ui container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, this.renderInput());\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    searchedItem: state.searchPhrase,\n    weather: state.weather,\n    locationName: state.clickedSearch\n  };\n};\n\nexport default connect(mapStateToProps, {\n  weatherData\n})(TodaysView);","map":{"version":3,"sources":["/Users/vincentwnyamu/Documents/CodingPractice/React/weather-dashboard/src/components/TodaysView.js"],"names":["React","Component","connect","weatherData","WeatherIcon","TodaysView","componentDidUpdate","prevState","props","searchedItem","length","weather","renderInput","Object","keys","unixToDay","data","currently","time","locationName","Math","round","temperature","apparentTemperature","unixToStandardConverter","daily","sunsetTime","hourly","decimalToPercent","precipProbability","render","mapStateToProps","state","searchPhrase","clickedSearch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { weatherData } from '../actions';\nimport WeatherIcon from './WeatherIcon';\n\nclass TodaysView extends Component {\n  componentDidUpdate(prevState) {\n    if (this.props.searchedItem.length !== 0) {\n      if (this.props.weather === prevState.weather) {\n        this.props.weatherData();\n      }\n    }\n  }\n\n  renderInput() {\n    if (Object.keys(this.props.weather).length === 0) {\n      return <div>Hi there</div>;\n    }\n\n    return (\n      <div>\n        <h3>\n          Today:{' '}\n          {this.unixToDay(this.props.weather.data.currently.time, 'Date')}\n        </h3>\n        <h3>Location: {this.props.locationName}</h3>\n        <h3>\n          Temperature:{' '}\n          {Math.round(this.props.weather.data.currently.temperature)}Â° F\n        </h3>\n        <h3>\n          {/* Icon: <WeatherIcon icon={this.props.weather.data.currently.icon} /> */}\n        </h3>\n        <h3>\n          Feels Like{' '}\n          {Math.round(this.props.weather.data.currently.apparentTemperature)}\n        </h3>\n        <h3>\n          Sunset Time:{' '}\n          {this.unixToStandardConverter(\n            this.props.weather.data.daily.data[0].sunsetTime\n          )}\n        </h3>\n\n        <h3>-------------------</h3>\n\n        <h2>Chance of rain</h2>\n        <h3>\n          {this.unixToStandardConverter(\n            this.props.weather.data.hourly.data[2].time\n          )}\n          :{' '}\n          {this.decimalToPercent(\n            this.props.weather.data.hourly.data[2].precipProbability\n          )}\n        </h3>\n        <h3>\n          {this.unixToStandardConverter(\n            this.props.weather.data.hourly.data[4].time\n          )}\n          :\n          {this.decimalToPercent(\n            this.props.weather.data.hourly.data[4].precipProbability\n          )}\n        </h3>\n        <h3>\n          {this.unixToStandardConverter(\n            this.props.weather.data.hourly.data[6].time\n          )}\n          :\n          {this.decimalToPercent(\n            this.props.weather.data.hourly.data[6].precipProbability\n          )}\n        </h3>\n        <h3>\n          {this.unixToStandardConverter(\n            this.props.weather.data.hourly.data[8].time\n          )}\n          :\n          {this.decimalToPercent(\n            this.props.weather.data.hourly.data[8].precipProbability\n          )}\n        </h3>\n        <h3>\n          {this.unixToStandardConverter(\n            this.props.weather.data.hourly.data[10].time\n          )}\n          :\n          {this.decimalToPercent(\n            this.props.weather.data.hourly.data[10].precipProbability\n          )}\n        </h3>\n        <h3>\n          {this.unixToStandardConverter(\n            this.props.weather.data.hourly.data[12].time\n          )}\n          :\n          {this.decimalToPercent(\n            this.props.weather.data.hourly.data[12].precipProbability\n          )}\n        </h3>\n      </div>\n    );\n  }\n\n  render() {\n    return <div className=\"ui container\">{this.renderInput()}</div>;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    searchedItem: state.searchPhrase,\n    weather: state.weather,\n    locationName: state.clickedSearch\n  };\n};\n\nexport default connect(mapStateToProps, { weatherData })(TodaysView);\n"]},"metadata":{},"sourceType":"module"}