{"ast":null,"code":"var _jsxFileName = \"/Users/vincentwnyamu/Documents/CodingPractice/React/weather-dashboard/src/components/ListView.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { weatherData } from '../actions';\n\nclass ListView extends Component {\n  componentDidUpdate(prevState) {\n    if (this.props.searchedItem.length && this.props.weather) {\n      this.props.weatherData();\n    } // console.log(this.props.weather);\n\n\n    console.log(new Date(this.props.weather.data.currently.time * 1000));\n  }\n\n  componentDidMount() {// console.log(0.44 * 100);\n  }\n\n  decimalToPercent(decimal) {\n    return ` ${Math.round(decimal * 100)}%`;\n  }\n\n  unixToStandardConverter(unixTime) {\n    // UNIX Time to [DayOfWeek, Month, Day, Y, Military Time, Timezone ]\n    let unixTimeConverter = new Date(unixTime * 1000).toString().split(' '); // Extract Time From unixTimeConverter variable\n\n    let militaryTime = unixTimeConverter[4].split(':'); // Remove the 0s from the end of the military time\n\n    let militaryTimeShortened = `${militaryTime[0]}:${militaryTime[1]}`; // 1. Check if the time is a.m. or p.m.\n    // 2. If a.m., return `military time + a.m`\n    // 3. If p.m., return `(military time - 12) + p.m.`\n\n    if (Number(`${militaryTimeShortened[0]}${militaryTimeShortened[1]}`) === 0) {\n      return `12:${militaryTimeShortened[3]}${militaryTimeShortened[4]} am`;\n    } else if (Number(`${militaryTimeShortened[0]}${militaryTimeShortened[1]}`) < 12) {\n      return `${militaryTimeShortened} am`;\n    } else {\n      let standardTime = Number(militaryTimeShortened[0] + militaryTimeShortened[1]) - 12;\n      standardTime = `${standardTime}:${militaryTimeShortened[3]}${militaryTimeShortened[4]}`;\n      return `${standardTime} pm`;\n    }\n  }\n\n  renderInput() {\n    if (this.props.weather.length === 0) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Hi there\");\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Location: \", this.props.locationName), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Temperature:\", ' ', Math.round(this.props.weather.data.currently.temperature)), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Feels Like: \", this.props.weather.data.currently.apparentTemperature), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Sunset Time:\", this.unixToStandardConverter(this.props.weather.data.daily.data[0].sunsetTime)), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Precipitation Probability:\", this.props.weather.data.currently.precipProbability), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"-------------------\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Chance of rain\"), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, this.unixToStandardConverter(this.props.weather.data.hourly.data[2].time), \":\", ' ', this.decimalToPercent(this.props.weather.data.hourly.data[2].precipProbability)), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, this.unixToStandardConverter(this.props.weather.data.hourly.data[4].time), \":\", this.decimalToPercent(this.props.weather.data.hourly.data[4].precipProbability)), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, this.unixToStandardConverter(this.props.weather.data.hourly.data[6].time), \":\", this.decimalToPercent(this.props.weather.data.hourly.data[6].precipProbability)), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, this.unixToStandardConverter(this.props.weather.data.hourly.data[8].time), \":\", this.decimalToPercent(this.props.weather.data.hourly.data[8].precipProbability)), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, this.unixToStandardConverter(this.props.weather.data.hourly.data[10].time), \":\", this.decimalToPercent(this.props.weather.data.hourly.data[10].precipProbability)), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, this.unixToStandardConverter(this.props.weather.data.hourly.data[12].time), \":\", this.decimalToPercent(this.props.weather.data.hourly.data[12].precipProbability)));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"ui container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, this.renderInput());\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    searchedItem: state.searchPhrase,\n    weather: state.weather,\n    locationName: state.clickedSearch\n  };\n};\n\nexport default connect(mapStateToProps, {\n  weatherData\n})(ListView);","map":{"version":3,"sources":["/Users/vincentwnyamu/Documents/CodingPractice/React/weather-dashboard/src/components/ListView.js"],"names":["React","Component","connect","weatherData","ListView","componentDidUpdate","prevState","props","searchedItem","length","weather","console","log","Date","data","currently","time","componentDidMount","decimalToPercent","decimal","Math","round","unixToStandardConverter","unixTime","unixTimeConverter","toString","split","militaryTime","militaryTimeShortened","Number","standardTime","renderInput","locationName","temperature","apparentTemperature","daily","sunsetTime","precipProbability","hourly","render","mapStateToProps","state","searchPhrase","clickedSearch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { weatherData } from '../actions';\n\nclass ListView extends Component {\n  componentDidUpdate(prevState) {\n    if (this.props.searchedItem.length && this.props.weather) {\n      this.props.weatherData();\n    }\n    // console.log(this.props.weather);\n    console.log(new Date(this.props.weather.data.currently.time * 1000));\n  }\n\n  componentDidMount() {\n    // console.log(0.44 * 100);\n  }\n\n  decimalToPercent(decimal) {\n    return ` ${Math.round(decimal * 100)}%`;\n  }\n\n  unixToStandardConverter(unixTime) {\n    // UNIX Time to [DayOfWeek, Month, Day, Y, Military Time, Timezone ]\n    let unixTimeConverter = new Date(unixTime * 1000).toString().split(' ');\n\n    // Extract Time From unixTimeConverter variable\n    let militaryTime = unixTimeConverter[4].split(':');\n\n    // Remove the 0s from the end of the military time\n    let militaryTimeShortened = `${militaryTime[0]}:${militaryTime[1]}`;\n\n    // 1. Check if the time is a.m. or p.m.\n    // 2. If a.m., return `military time + a.m`\n    // 3. If p.m., return `(military time - 12) + p.m.`\n\n    if (\n      Number(`${militaryTimeShortened[0]}${militaryTimeShortened[1]}`) === 0\n    ) {\n      return `12:${militaryTimeShortened[3]}${militaryTimeShortened[4]} am`;\n    } else if (\n      Number(`${militaryTimeShortened[0]}${militaryTimeShortened[1]}`) < 12\n    ) {\n      return `${militaryTimeShortened} am`;\n    } else {\n      let standardTime =\n        Number(militaryTimeShortened[0] + militaryTimeShortened[1]) - 12;\n\n      standardTime = `${standardTime}:${militaryTimeShortened[3]}${militaryTimeShortened[4]}`;\n      return `${standardTime} pm`;\n    }\n  }\n\n  renderInput() {\n    if (this.props.weather.length === 0) {\n      return <div>Hi there</div>;\n    }\n\n    return (\n      <div>\n        <h3>Location: {this.props.locationName}</h3>\n        <h3>\n          Temperature:{' '}\n          {Math.round(this.props.weather.data.currently.temperature)}\n        </h3>\n        <h3>\n          Feels Like: {this.props.weather.data.currently.apparentTemperature}\n        </h3>\n        <h3>\n          Sunset Time:\n          {this.unixToStandardConverter(\n            this.props.weather.data.daily.data[0].sunsetTime\n          )}\n        </h3>\n        <h3>\n          Precipitation Probability:\n          {this.props.weather.data.currently.precipProbability}\n        </h3>\n        <h3>-------------------</h3>\n\n        <h2>Chance of rain</h2>\n        <h3>\n          {this.unixToStandardConverter(\n            this.props.weather.data.hourly.data[2].time\n          )}\n          :{' '}\n          {this.decimalToPercent(\n            this.props.weather.data.hourly.data[2].precipProbability\n          )}\n        </h3>\n        <h3>\n          {this.unixToStandardConverter(\n            this.props.weather.data.hourly.data[4].time\n          )}\n          :\n          {this.decimalToPercent(\n            this.props.weather.data.hourly.data[4].precipProbability\n          )}\n        </h3>\n        <h3>\n          {this.unixToStandardConverter(\n            this.props.weather.data.hourly.data[6].time\n          )}\n          :\n          {this.decimalToPercent(\n            this.props.weather.data.hourly.data[6].precipProbability\n          )}\n        </h3>\n        <h3>\n          {this.unixToStandardConverter(\n            this.props.weather.data.hourly.data[8].time\n          )}\n          :\n          {this.decimalToPercent(\n            this.props.weather.data.hourly.data[8].precipProbability\n          )}\n        </h3>\n        <h3>\n          {this.unixToStandardConverter(\n            this.props.weather.data.hourly.data[10].time\n          )}\n          :\n          {this.decimalToPercent(\n            this.props.weather.data.hourly.data[10].precipProbability\n          )}\n        </h3>\n        <h3>\n          {this.unixToStandardConverter(\n            this.props.weather.data.hourly.data[12].time\n          )}\n          :\n          {this.decimalToPercent(\n            this.props.weather.data.hourly.data[12].precipProbability\n          )}\n        </h3>\n      </div>\n    );\n  }\n\n  render() {\n    return <div className=\"ui container\">{this.renderInput()}</div>;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    searchedItem: state.searchPhrase,\n    weather: state.weather,\n    locationName: state.clickedSearch\n  };\n};\n\nexport default connect(mapStateToProps, { weatherData })(ListView);\n"]},"metadata":{},"sourceType":"module"}