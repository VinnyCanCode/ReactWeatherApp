{"ast":null,"code":"var _jsxFileName = \"/Users/vincentwnyamu/Documents/CodingPractice/React/weather-dashboard/dashboard/src/components/HighlightedCities.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchHighlightedCity } from '../actions';\n\nclass HighlightedCities extends Component {\n  componentDidMount() {\n    this.props.fetchHighlightedCity();\n  }\n\n  componentDidUpdate() {\n    console.log(this.props.highlightedCities[Math.floor(Math.random() * 39)]);\n  }\n\n  renderRandomCities() {\n    if (!this.props.highlightedCities) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, \"Loading...\");\n    }\n\n    let randomCities = [];\n\n    for (let i; i < 4; i++) {\n      randomCities.push(this.props.highlightedCities[Math.floor(Math.random() * 39)]);\n    }\n\n    return randomCities.map(city => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, city.cityName), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, city.picture), \"Real work huh...?\"));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, this.renderRandomCities());\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    highlightedCities: state.fetchCities\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchHighlightedCity\n})(HighlightedCities);","map":{"version":3,"sources":["/Users/vincentwnyamu/Documents/CodingPractice/React/weather-dashboard/dashboard/src/components/HighlightedCities.js"],"names":["React","Component","connect","fetchHighlightedCity","HighlightedCities","componentDidMount","props","componentDidUpdate","console","log","highlightedCities","Math","floor","random","renderRandomCities","randomCities","i","push","map","city","cityName","picture","render","mapStateToProps","state","fetchCities"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,oBAAT,QAAqC,YAArC;;AAEA,MAAMC,iBAAN,SAAgCH,SAAhC,CAA0C;AACxCI,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWH,oBAAX;AACD;;AAEDI,EAAAA,kBAAkB,GAAG;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAL,CAAWI,iBAAX,CAA6BC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,CAA7B,CAAZ;AACD;;AAEDC,EAAAA,kBAAkB,GAAG;AACnB,QAAI,CAAC,KAAKR,KAAL,CAAWI,iBAAhB,EAAmC;AACjC,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD;;AAED,QAAIK,YAAY,GAAG,EAAnB;;AACA,SAAK,IAAIC,CAAT,EAAYA,CAAC,GAAG,CAAhB,EAAmBA,CAAC,EAApB,EAAwB;AACtBD,MAAAA,YAAY,CAACE,IAAb,CACE,KAAKX,KAAL,CAAWI,iBAAX,CAA6BC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,CAA7B,CADF;AAGD;;AAED,WAAOE,YAAY,CAACG,GAAb,CAAiBC,IAAI,IAC1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,IAAI,CAACC,QAAV,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,IAAI,CAACE,OAAV,CAFF,sBADK,CAAP;AAOD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKR,kBAAL,EAAN,CAAP;AACD;;AAhCuC;;AAmC1C,MAAMS,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AAAEd,IAAAA,iBAAiB,EAAEc,KAAK,CAACC;AAA3B,GAAP;AACD,CAFD;;AAIA,eAAevB,OAAO,CAACqB,eAAD,EAAkB;AAAEpB,EAAAA;AAAF,CAAlB,CAAP,CACbC,iBADa,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchHighlightedCity } from '../actions';\n\nclass HighlightedCities extends Component {\n  componentDidMount() {\n    this.props.fetchHighlightedCity();\n  }\n\n  componentDidUpdate() {\n    console.log(this.props.highlightedCities[Math.floor(Math.random() * 39)]);\n  }\n\n  renderRandomCities() {\n    if (!this.props.highlightedCities) {\n      return <div>Loading...</div>;\n    }\n\n    let randomCities = [];\n    for (let i; i < 4; i++) {\n      randomCities.push(\n        this.props.highlightedCities[Math.floor(Math.random() * 39)]\n      );\n    }\n\n    return randomCities.map(city => (\n      <div>\n        <h3>{city.cityName}</h3>\n        <h4>{city.picture}</h4>\n        Real work huh...?\n      </div>\n    ));\n  }\n\n  render() {\n    return <div>{this.renderRandomCities()}</div>;\n  }\n}\n\nconst mapStateToProps = state => {\n  return { highlightedCities: state.fetchCities };\n};\n\nexport default connect(mapStateToProps, { fetchHighlightedCity })(\n  HighlightedCities\n);\n"]},"metadata":{},"sourceType":"module"}