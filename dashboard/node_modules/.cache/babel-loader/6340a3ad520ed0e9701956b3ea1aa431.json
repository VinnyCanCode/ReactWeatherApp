{"ast":null,"code":"var _jsxFileName = \"/Users/vincentwnyamu/Documents/CodingPractice/React/weather-dashboard/dashboard/src/components/DailyView.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { unixToDay, decimalToPercent } from './Util';\nimport WeatherIcon from './WeatherIcon';\n\nclass DailyView extends Component {\n  componentDidUpdate() {// let sevenDayData = this.props.weatherDailyData.daily.data;\n    // sevenDayData = sevenDayData.slice(1);\n    // console.log(sevenDayData);\n    // console.log(unixToDay(sevenDayData[0].time, 'Date'));\n    // console.log(sevenDayData[0].time);\n  }\n\n  renderInput() {\n    if (Object.keys(this.props.weatherData).length === 0) {\n      return 'Daily View';\n    }\n\n    let sevenDayData = this.props.weatherDailyData.daily.data;\n    sevenDayData = sevenDayData.slice(1);\n    return sevenDayData.map((day, index) => React.createElement(\"div\", {\n      key: index,\n      className: \"ui divided list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, unixToDay(day.time, 'Day')), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"/Imgs/rainDrop.svg\",\n      alt: \"rain drop\",\n      style: {\n        height: '1.5rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), decimalToPercent(day.precipProbability), \"%\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, ' ', React.createElement(WeatherIcon, {\n      icon: day.icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    })), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, ' ', \"TempLow: \", Math.round(day.temperatureLow), \"\\xB0F || TempHigh:\", ' ', Math.round(day.temperatureHigh), \"\\xB0F\"))));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, this.renderInput());\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    weatherData: state.weather,\n    weatherDailyData: state.weather.data\n  };\n};\n\nexport default connect(mapStateToProps)(DailyView);","map":{"version":3,"sources":["/Users/vincentwnyamu/Documents/CodingPractice/React/weather-dashboard/dashboard/src/components/DailyView.js"],"names":["React","Component","connect","unixToDay","decimalToPercent","WeatherIcon","DailyView","componentDidUpdate","renderInput","Object","keys","props","weatherData","length","sevenDayData","weatherDailyData","daily","data","slice","map","day","index","time","height","precipProbability","icon","Math","round","temperatureLow","temperatureHigh","render","mapStateToProps","state","weather"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,EAAoBC,gBAApB,QAA4C,QAA5C;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,SAAN,SAAwBL,SAAxB,CAAkC;AAChCM,EAAAA,kBAAkB,GAAG,CACnB;AACA;AACA;AACA;AACA;AACD;;AAEDC,EAAAA,WAAW,GAAG;AACZ,QAAIC,MAAM,CAACC,IAAP,CAAY,KAAKC,KAAL,CAAWC,WAAvB,EAAoCC,MAApC,KAA+C,CAAnD,EAAsD;AACpD,aAAO,YAAP;AACD;;AAED,QAAIC,YAAY,GAAG,KAAKH,KAAL,CAAWI,gBAAX,CAA4BC,KAA5B,CAAkCC,IAArD;AACAH,IAAAA,YAAY,GAAGA,YAAY,CAACI,KAAb,CAAmB,CAAnB,CAAf;AACA,WAAOJ,YAAY,CAACK,GAAb,CAAiB,CAACC,GAAD,EAAMC,KAAN,KACtB;AAAK,MAAA,GAAG,EAAEA,KAAV;AAAiB,MAAA,SAAS,EAAC,iBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKlB,SAAS,CAACiB,GAAG,CAACE,IAAL,EAAW,KAAX,CAAd,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,GAAG,EAAC,oBADN;AAEE,MAAA,GAAG,EAAC,WAFN;AAGE,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAMGnB,gBAAgB,CAACgB,GAAG,CAACI,iBAAL,CANnB,MAFF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,GADH,EAEE,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAEJ,GAAG,CAACK,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAVF,EAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,GADH,eAEYC,IAAI,CAACC,KAAL,CAAWP,GAAG,CAACQ,cAAf,CAFZ,wBAE2D,GAF3D,EAGGF,IAAI,CAACC,KAAL,CAAWP,GAAG,CAACS,eAAf,CAHH,UAdF,CADF,CADK,CAAP;AAwBD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKtB,WAAL,EAAN,CAAP;AACD;;AA5C+B;;AA+ClC,MAAMuB,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AAAEpB,IAAAA,WAAW,EAAEoB,KAAK,CAACC,OAArB;AAA8BlB,IAAAA,gBAAgB,EAAEiB,KAAK,CAACC,OAAN,CAAchB;AAA9D,GAAP;AACD,CAFD;;AAIA,eAAef,OAAO,CAAC6B,eAAD,CAAP,CAAyBzB,SAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { unixToDay, decimalToPercent } from './Util';\nimport WeatherIcon from './WeatherIcon';\n\nclass DailyView extends Component {\n  componentDidUpdate() {\n    // let sevenDayData = this.props.weatherDailyData.daily.data;\n    // sevenDayData = sevenDayData.slice(1);\n    // console.log(sevenDayData);\n    // console.log(unixToDay(sevenDayData[0].time, 'Date'));\n    // console.log(sevenDayData[0].time);\n  }\n\n  renderInput() {\n    if (Object.keys(this.props.weatherData).length === 0) {\n      return 'Daily View';\n    }\n\n    let sevenDayData = this.props.weatherDailyData.daily.data;\n    sevenDayData = sevenDayData.slice(1);\n    return sevenDayData.map((day, index) => (\n      <div key={index} className=\"ui divided list\">\n        <ul>\n          <li>{unixToDay(day.time, 'Day')}</li>\n          <li>\n            <img\n              src=\"/Imgs/rainDrop.svg\"\n              alt=\"rain drop\"\n              style={{ height: '1.5rem' }}\n            />\n            {decimalToPercent(day.precipProbability)}%\n          </li>\n          <li>\n            {' '}\n            <WeatherIcon icon={day.icon} />\n          </li>\n          <li>\n            {' '}\n            TempLow: {Math.round(day.temperatureLow)}°F || TempHigh:{' '}\n            {Math.round(day.temperatureHigh)}°F\n          </li>\n        </ul>\n      </div>\n    ));\n  }\n\n  render() {\n    return <div>{this.renderInput()}</div>;\n  }\n}\n\nconst mapStateToProps = state => {\n  return { weatherData: state.weather, weatherDailyData: state.weather.data };\n};\n\nexport default connect(mapStateToProps)(DailyView);\n"]},"metadata":{},"sourceType":"module"}