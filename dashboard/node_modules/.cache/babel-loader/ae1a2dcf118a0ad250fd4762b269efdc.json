{"ast":null,"code":"var _jsxFileName = \"/Users/vincentwnyamu/Documents/CodingPractice/React/weather-dashboard/src/components/DailyView.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { unixToDay, decimalToPercent } from './Util';\n\nclass DailyView extends Component {\n  componentDidUpdate() {// let sevenDayData = this.props.weatherDailyData.daily.data;\n    // sevenDayData = sevenDayData.slice(1);\n    // console.log(sevenDayData);\n    // console.log(unixToDay(sevenDayData[0].time, 'Date'));\n    // console.log(sevenDayData[0].time);\n  }\n\n  renderInput() {\n    if (Object.keys(this.props.weatherData).length === 0) {\n      return 'Daily View';\n    }\n\n    let sevenDayData = this.props.weatherDailyData.daily.data;\n    console.log(sevenDayData); // sevenDayData = sevenDayData;\n\n    return this.props.weatherDailyData.daily.data.map((day, index) => {\n      return React.createElement(\"div\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, unixToDay(day.time, 'Day')));\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, this.renderInput());\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    weatherData: state.weather,\n    weatherDailyData: state.weather.data\n  };\n};\n\nexport default connect(mapStateToProps)(DailyView);","map":{"version":3,"sources":["/Users/vincentwnyamu/Documents/CodingPractice/React/weather-dashboard/src/components/DailyView.js"],"names":["React","Component","connect","unixToDay","decimalToPercent","DailyView","componentDidUpdate","renderInput","Object","keys","props","weatherData","length","sevenDayData","weatherDailyData","daily","data","console","log","map","day","index","time","render","mapStateToProps","state","weather"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,EAAoBC,gBAApB,QAA4C,QAA5C;;AAEA,MAAMC,SAAN,SAAwBJ,SAAxB,CAAkC;AAChCK,EAAAA,kBAAkB,GAAG,CACnB;AACA;AACA;AACA;AACA;AACD;;AAEDC,EAAAA,WAAW,GAAG;AACZ,QAAIC,MAAM,CAACC,IAAP,CAAY,KAAKC,KAAL,CAAWC,WAAvB,EAAoCC,MAApC,KAA+C,CAAnD,EAAsD;AACpD,aAAO,YAAP;AACD;;AAED,QAAIC,YAAY,GAAG,KAAKH,KAAL,CAAWI,gBAAX,CAA4BC,KAA5B,CAAkCC,IAArD;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,YAAZ,EANY,CAQZ;;AACA,WAAO,KAAKH,KAAL,CAAWI,gBAAX,CAA4BC,KAA5B,CAAkCC,IAAlC,CAAuCG,GAAvC,CAA2C,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAChE,aACE;AAAK,QAAA,GAAG,EAAEA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKlB,SAAS,CAACiB,GAAG,CAACE,IAAL,EAAW,KAAX,CAAd,CADF,CADF;AAKD,KANM,CAAP;AAOD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKhB,WAAL,EAAN,CAAP;AACD;;AA7B+B;;AAgClC,MAAMiB,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AAAEd,IAAAA,WAAW,EAAEc,KAAK,CAACC,OAArB;AAA8BZ,IAAAA,gBAAgB,EAAEW,KAAK,CAACC,OAAN,CAAcV;AAA9D,GAAP;AACD,CAFD;;AAIA,eAAed,OAAO,CAACsB,eAAD,CAAP,CAAyBnB,SAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { unixToDay, decimalToPercent } from './Util';\n\nclass DailyView extends Component {\n  componentDidUpdate() {\n    // let sevenDayData = this.props.weatherDailyData.daily.data;\n    // sevenDayData = sevenDayData.slice(1);\n    // console.log(sevenDayData);\n    // console.log(unixToDay(sevenDayData[0].time, 'Date'));\n    // console.log(sevenDayData[0].time);\n  }\n\n  renderInput() {\n    if (Object.keys(this.props.weatherData).length === 0) {\n      return 'Daily View';\n    }\n\n    let sevenDayData = this.props.weatherDailyData.daily.data;\n    console.log(sevenDayData);\n\n    // sevenDayData = sevenDayData;\n    return this.props.weatherDailyData.daily.data.map((day, index) => {\n      return (\n        <div key={index}>\n          <h3>{unixToDay(day.time, 'Day')}</h3>\n        </div>\n      );\n    });\n  }\n\n  render() {\n    return <div>{this.renderInput()}</div>;\n  }\n}\n\nconst mapStateToProps = state => {\n  return { weatherData: state.weather, weatherDailyData: state.weather.data };\n};\n\nexport default connect(mapStateToProps)(DailyView);\n"]},"metadata":{},"sourceType":"module"}