{"ast":null,"code":"var _jsxFileName = \"/Users/vincentwnyamu/Documents/CodingPractice/React/weather-dashboard/src/components/Searchbar.js\";\nimport React, { Component } from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\nclass SearchBar extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onSubmit = formValues => {\n      console.log(formValues);\n    };\n  }\n\n  renderError(error, touched) {}\n\n  renderInput({\n    input,\n    meta\n  }) {\n    console.log(meta);\n    return React.createElement(\"div\", {\n      className: \"ui fluid icon input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, React.createElement(\"input\", Object.assign({}, input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"ui button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, \"Search\"));\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.props.handleSubmit(this.onSubmit),\n      className: \"ui container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"searchFieldSubmission\",\n      component: this.renderInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst validate = formValues => {\n  let error;\n\n  if (!formValues.title === 'searchFieldSubmission') {\n    error.title = 'Please enter a zipcode or city';\n  }\n};\n\nexport default reduxForm({\n  form: 'submittedSearch'\n})(SearchBar);","map":{"version":3,"sources":["/Users/vincentwnyamu/Documents/CodingPractice/React/weather-dashboard/src/components/Searchbar.js"],"names":["React","Component","Field","reduxForm","SearchBar","onSubmit","formValues","console","log","renderError","error","touched","renderInput","input","meta","render","props","handleSubmit","validate","title","form"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;;AAEA,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAAA;AAAA;;AAAA,SAchCI,QAdgC,GAcrBC,UAAU,IAAI;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACD,KAhB+B;AAAA;;AAChCG,EAAAA,WAAW,CAACC,KAAD,EAAQC,OAAR,EAAiB,CAAE;;AAE9BC,EAAAA,WAAW,CAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD,EAAkB;AAC3BP,IAAAA,OAAO,CAACC,GAAR,CAAYM,IAAZ;AAEA,WACE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,+CAAWD,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,EAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CADF;AAMD;;AAMDE,EAAAA,MAAM,GAAG;AACP,WACE;AACE,MAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWC,YAAX,CAAwB,KAAKZ,QAA7B,CADZ;AAEE,MAAA,SAAS,EAAC,cAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,uBAAZ;AAAoC,MAAA,SAAS,EAAE,KAAKO,WAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF;AAQD;;AA3B+B;;AA8BlC,MAAMM,QAAQ,GAAGZ,UAAU,IAAI;AAC7B,MAAII,KAAJ;;AAEA,MAAI,CAACJ,UAAU,CAACa,KAAZ,KAAsB,uBAA1B,EAAmD;AACjDT,IAAAA,KAAK,CAACS,KAAN,GAAc,gCAAd;AACD;AACF,CAND;;AAQA,eAAehB,SAAS,CAAC;AACvBiB,EAAAA,IAAI,EAAE;AADiB,CAAD,CAAT,CAEZhB,SAFY,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\nclass SearchBar extends Component {\n  renderError(error, touched) {}\n\n  renderInput({ input, meta }) {\n    console.log(meta);\n\n    return (\n      <div className=\"ui fluid icon input\">\n        <input {...input} />\n        <div className=\"ui button\">Search</div>\n      </div>\n    );\n  }\n\n  onSubmit = formValues => {\n    console.log(formValues);\n  };\n\n  render() {\n    return (\n      <form\n        onSubmit={this.props.handleSubmit(this.onSubmit)}\n        className=\"ui container\"\n      >\n        <Field name=\"searchFieldSubmission\" component={this.renderInput} />\n      </form>\n    );\n  }\n}\n\nconst validate = formValues => {\n  let error;\n\n  if (!formValues.title === 'searchFieldSubmission') {\n    error.title = 'Please enter a zipcode or city';\n  }\n};\n\nexport default reduxForm({\n  form: 'submittedSearch'\n})(SearchBar);\n"]},"metadata":{},"sourceType":"module"}