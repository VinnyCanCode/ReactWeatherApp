{"ast":null,"code":"var _jsxFileName = \"/Users/vincentwnyamu/Documents/CodingPractice/React/weather-dashboard/src/components/Searchbar.js\";\nimport React, { Component } from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\nclass SearchBar extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderError = ({\n      error,\n      touched\n    }) => {\n      if (error && touched) {\n        return React.createElement(\"div\", {\n          className: \"ui error message\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 8\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"header\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 9\n          },\n          __self: this\n        }, error));\n      }\n    };\n\n    this.renderInput = ({\n      input,\n      meta\n    }) => {\n      console.log(meta);\n      return React.createElement(\"div\", {\n        className: \"ui fluid icon input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(\"input\", Object.assign({}, input, {\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      })), this.renderError(meta), React.createElement(\"div\", {\n        className: \"ui button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, \"Search\"));\n    };\n\n    this.onSubmit = formValues => {\n      console.log(formValues);\n    };\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.props.handleSubmit(this.onSubmit),\n      className: \"ui container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"searchFieldSubmission\",\n      component: this.renderInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst validate = formValues => {\n  const error = {};\n\n  if (!formValues.searchFieldSubmission) {\n    error.searchFieldSubmission = 'Please enter a zipcode or city';\n  }\n\n  return error;\n};\n\nexport default reduxForm({\n  form: 'submittedSearch',\n  validate\n})(SearchBar);","map":{"version":3,"sources":["/Users/vincentwnyamu/Documents/CodingPractice/React/weather-dashboard/src/components/Searchbar.js"],"names":["React","Component","Field","reduxForm","SearchBar","renderError","error","touched","renderInput","input","meta","console","log","onSubmit","formValues","render","props","handleSubmit","validate","searchFieldSubmission","form"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;;AAEA,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAAA;AAAA;;AAAA,SAChCI,WADgC,GAClB,CAAC;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAD,KAAwB;AACpC,UAAID,KAAK,IAAIC,OAAb,EAAsB;AACpB,eACE;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAyBD,KAAzB,CADF,CADF;AAKD;AACF,KAT+B;;AAAA,SAWhCE,WAXgC,GAWlB,CAAC;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAD,KAAqB;AACjCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,aACE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,+CAAWD,KAAX;AAAkB,QAAA,YAAY,EAAC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,EAEG,KAAKJ,WAAL,CAAiBK,IAAjB,CAFH,EAGE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,CADF;AAOD,KApB+B;;AAAA,SAsBhCG,QAtBgC,GAsBrBC,UAAU,IAAI;AACvBH,MAAAA,OAAO,CAACC,GAAR,CAAYE,UAAZ;AACD,KAxB+B;AAAA;;AA0BhCC,EAAAA,MAAM,GAAG;AACP,WACE;AACE,MAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWC,YAAX,CAAwB,KAAKJ,QAA7B,CADZ;AAEE,MAAA,SAAS,EAAC,cAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,uBAAZ;AAAoC,MAAA,SAAS,EAAE,KAAKL,WAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF;AAQD;;AAnC+B;;AAsClC,MAAMU,QAAQ,GAAGJ,UAAU,IAAI;AAC7B,QAAMR,KAAK,GAAG,EAAd;;AAEA,MAAI,CAACQ,UAAU,CAACK,qBAAhB,EAAuC;AACrCb,IAAAA,KAAK,CAACa,qBAAN,GAA8B,gCAA9B;AACD;;AAED,SAAOb,KAAP;AACD,CARD;;AAUA,eAAeH,SAAS,CAAC;AACvBiB,EAAAA,IAAI,EAAE,iBADiB;AAEvBF,EAAAA;AAFuB,CAAD,CAAT,CAGZd,SAHY,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\nclass SearchBar extends Component {\n  renderError = ({ error, touched }) => {\n    if (error && touched) {\n      return (\n        <div className=\"ui error message\">\n          <div className=\"header\">{error}</div>\n        </div>\n      );\n    }\n  };\n\n  renderInput = ({ input, meta }) => {\n    console.log(meta);\n    return (\n      <div className=\"ui fluid icon input\">\n        <input {...input} autoComplete=\"off\" />\n        {this.renderError(meta)}\n        <div className=\"ui button\">Search</div>\n      </div>\n    );\n  };\n\n  onSubmit = formValues => {\n    console.log(formValues);\n  };\n\n  render() {\n    return (\n      <form\n        onSubmit={this.props.handleSubmit(this.onSubmit)}\n        className=\"ui container\"\n      >\n        <Field name=\"searchFieldSubmission\" component={this.renderInput} />\n      </form>\n    );\n  }\n}\n\nconst validate = formValues => {\n  const error = {};\n\n  if (!formValues.searchFieldSubmission) {\n    error.searchFieldSubmission = 'Please enter a zipcode or city';\n  }\n\n  return error;\n};\n\nexport default reduxForm({\n  form: 'submittedSearch',\n  validate\n})(SearchBar);\n"]},"metadata":{},"sourceType":"module"}