{"ast":null,"code":"import _slicedToArray from \"/Users/vincentwnyamu/Documents/CodingPractice/React/weather-dashboard/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { SUBMITTED_SEARCH, GET_WEATHERDATA } from './types';\nimport mapBox, { accessToken } from '../apis/mapBox'; // import darkSky from '../apis/darkSky';\n// export const searchPhrase = submittedSearch => {\n//   return { type: SUBMITTED_SEARCH, payload: submittedSearch };\n// };\n\nexport const searchPhrase = submittedSearch => async dispatch => {\n  const response = await mapBox.get(`/${submittedSearch}.json?access_token=${accessToken}`);\n  dispatch({\n    type: SUBMITTED_SEARCH,\n    payload: response.data.features[0].geometry.coordinates\n  });\n};\nexport const weatherData = (exclude = 'alerts, flags') => async (dispatch, getState) => {\n  const _getState$searchPhras = _slicedToArray(getState().searchPhrase, 2),\n        lat = _getState$searchPhras[0],\n        long = _getState$searchPhras[1];\n\n  dispatch({\n    type: GET_WEATHERDATA,\n    payload: [lat, long]\n  });\n}; // exclude = 'alerts, flags'","map":{"version":3,"sources":["/Users/vincentwnyamu/Documents/CodingPractice/React/weather-dashboard/src/actions/index.js"],"names":["SUBMITTED_SEARCH","GET_WEATHERDATA","mapBox","accessToken","searchPhrase","submittedSearch","dispatch","response","get","type","payload","data","features","geometry","coordinates","weatherData","exclude","getState","lat","long"],"mappings":";AAAA,SAASA,gBAAT,EAA2BC,eAA3B,QAAkD,SAAlD;AACA,OAAOC,MAAP,IAAiBC,WAAjB,QAAoC,gBAApC,C,CACA;AAEA;AACA;AACA;;AAEA,OAAO,MAAMC,YAAY,GAAGC,eAAe,IAAI,MAAMC,QAAN,IAAkB;AAC/D,QAAMC,QAAQ,GAAG,MAAML,MAAM,CAACM,GAAP,CACpB,IAAGH,eAAgB,sBAAqBF,WAAY,EADhC,CAAvB;AAIAG,EAAAA,QAAQ,CAAC;AACPG,IAAAA,IAAI,EAAET,gBADC;AAEPU,IAAAA,OAAO,EAAEH,QAAQ,CAACI,IAAT,CAAcC,QAAd,CAAuB,CAAvB,EAA0BC,QAA1B,CAAmCC;AAFrC,GAAD,CAAR;AAID,CATM;AAWP,OAAO,MAAMC,WAAW,GAAG,CAACC,OAAO,GAAG,eAAX,KAA+B,OACxDV,QADwD,EAExDW,QAFwD,KAGrD;AAAA,+CACiBA,QAAQ,GAAGb,YAD5B;AAAA,QACIc,GADJ;AAAA,QACSC,IADT;;AAGHb,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAER,eAAR;AAAyBS,IAAAA,OAAO,EAAE,CAACQ,GAAD,EAAMC,IAAN;AAAlC,GAAD,CAAR;AACD,CAPM,C,CASP","sourcesContent":["import { SUBMITTED_SEARCH, GET_WEATHERDATA } from './types';\nimport mapBox, { accessToken } from '../apis/mapBox';\n// import darkSky from '../apis/darkSky';\n\n// export const searchPhrase = submittedSearch => {\n//   return { type: SUBMITTED_SEARCH, payload: submittedSearch };\n// };\n\nexport const searchPhrase = submittedSearch => async dispatch => {\n  const response = await mapBox.get(\n    `/${submittedSearch}.json?access_token=${accessToken}`\n  );\n\n  dispatch({\n    type: SUBMITTED_SEARCH,\n    payload: response.data.features[0].geometry.coordinates\n  });\n};\n\nexport const weatherData = (exclude = 'alerts, flags') => async (\n  dispatch,\n  getState\n) => {\n  const [lat, long] = getState().searchPhrase;\n\n  dispatch({ type: GET_WEATHERDATA, payload: [lat, long] });\n};\n\n// exclude = 'alerts, flags'\n"]},"metadata":{},"sourceType":"module"}