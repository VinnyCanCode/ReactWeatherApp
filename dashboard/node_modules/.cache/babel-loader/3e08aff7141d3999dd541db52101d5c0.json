{"ast":null,"code":"var _jsxFileName = \"/Users/vincentwnyamu/Documents/CodingPractice/React/weather-dashboard/dashboard/src/components/TodaysView.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { weatherData } from '../actions';\nimport WeatherIcon from './WeatherIcon';\nimport { unixToDay, unixToStandardConverter, decimalToPercent } from './Util';\nimport WeatherIconTwo from './WeatherIconTwo';\n\nclass TodaysView extends Component {\n  componentDidUpdate(prevState) {\n    if (this.props.searchedItem.length !== 0) {\n      if (this.props.weather === prevState.weather) {\n        this.props.weatherData();\n      }\n    }\n  }\n\n  renderInput() {\n    if (Object.keys(this.props.weather).length === 0) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, \"Hi there\");\n    }\n\n    let currentWeather = this.props.weather.data.currently;\n    let hourlWeather = this.props.weather.data.hourly;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"Today: \", unixToDay(currentWeather.time, 'Date')), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Location: \", this.props.locationName), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Temperature: \", Math.round(currentWeather.temperature), \"\\xB0 F\"), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Feels Like \", Math.round(currentWeather.apparentTemperature)), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Sunset Time:\", ' ', unixToStandardConverter(this.props.weather.data.daily.data[0].sunsetTime)), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"-------------------\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Chance of rain\"), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, unixToStandardConverter(hourlWeather.data[2].time), \":\", ' ', decimalToPercent(hourlWeather.data[2].precipProbability)), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, unixToStandardConverter(hourlWeather.data[4].time), \":\", decimalToPercent(hourlWeather.data[4].precipProbability)), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, unixToStandardConverter(hourlWeather.data[6].time), \":\", decimalToPercent(hourlWeather.data[6].precipProbability)), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, unixToStandardConverter(hourlWeather.data[8].time), \":\", decimalToPercent(hourlWeather.data[8].precipProbability)), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, unixToStandardConverter(hourlWeather.data[10].time), \":\", decimalToPercent(hourlWeather.data[10].precipProbability)), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, unixToStandardConverter(hourlWeather.data[12].time), \":\", decimalToPercent(hourlWeather.data[12].precipProbability)));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, this.renderInput());\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    searchedItem: state.searchPhrase,\n    weather: state.weather,\n    locationName: state.clickedSearch\n  };\n};\n\nexport default connect(mapStateToProps, {\n  weatherData\n})(TodaysView);","map":{"version":3,"sources":["/Users/vincentwnyamu/Documents/CodingPractice/React/weather-dashboard/dashboard/src/components/TodaysView.js"],"names":["React","Component","connect","weatherData","WeatherIcon","unixToDay","unixToStandardConverter","decimalToPercent","WeatherIconTwo","TodaysView","componentDidUpdate","prevState","props","searchedItem","length","weather","renderInput","Object","keys","currentWeather","data","currently","hourlWeather","hourly","time","locationName","Math","round","temperature","apparentTemperature","daily","sunsetTime","precipProbability","render","mapStateToProps","state","searchPhrase","clickedSearch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { weatherData } from '../actions';\nimport WeatherIcon from './WeatherIcon';\nimport { unixToDay, unixToStandardConverter, decimalToPercent } from './Util';\nimport WeatherIconTwo from './WeatherIconTwo';\n\nclass TodaysView extends Component {\n  componentDidUpdate(prevState) {\n    if (this.props.searchedItem.length !== 0) {\n      if (this.props.weather === prevState.weather) {\n        this.props.weatherData();\n      }\n    }\n  }\n\n  renderInput() {\n    if (Object.keys(this.props.weather).length === 0) {\n      return <div>Hi there</div>;\n    }\n\n    let currentWeather = this.props.weather.data.currently;\n    let hourlWeather = this.props.weather.data.hourly;\n    return (\n      <div>\n        <h3>Today: {unixToDay(currentWeather.time, 'Date')}</h3>\n        <h3>Location: {this.props.locationName}</h3>\n        <h3>Temperature: {Math.round(currentWeather.temperature)}Â° F</h3>\n        {/* <h3>\n          Icon: <WeatherIcon icon={currentWeather.icon} />\n        </h3> */}\n        <h3></h3>\n        <h3>Feels Like {Math.round(currentWeather.apparentTemperature)}</h3>\n        <h3>\n          Sunset Time:{' '}\n          {unixToStandardConverter(\n            this.props.weather.data.daily.data[0].sunsetTime\n          )}\n        </h3>\n\n        <h3>-------------------</h3>\n\n        <h2>Chance of rain</h2>\n        <h3>\n          {unixToStandardConverter(hourlWeather.data[2].time)}:{' '}\n          {decimalToPercent(hourlWeather.data[2].precipProbability)}\n        </h3>\n        <h3>\n          {unixToStandardConverter(hourlWeather.data[4].time)}:\n          {decimalToPercent(hourlWeather.data[4].precipProbability)}\n        </h3>\n        <h3>\n          {unixToStandardConverter(hourlWeather.data[6].time)}:\n          {decimalToPercent(hourlWeather.data[6].precipProbability)}\n        </h3>\n        <h3>\n          {unixToStandardConverter(hourlWeather.data[8].time)}:\n          {decimalToPercent(hourlWeather.data[8].precipProbability)}\n        </h3>\n        <h3>\n          {unixToStandardConverter(hourlWeather.data[10].time)}:\n          {decimalToPercent(hourlWeather.data[10].precipProbability)}\n        </h3>\n        <h3>\n          {unixToStandardConverter(hourlWeather.data[12].time)}:\n          {decimalToPercent(hourlWeather.data[12].precipProbability)}\n        </h3>\n      </div>\n    );\n  }\n\n  render() {\n    return <div>{this.renderInput()}</div>;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    searchedItem: state.searchPhrase,\n    weather: state.weather,\n    locationName: state.clickedSearch\n  };\n};\n\nexport default connect(mapStateToProps, { weatherData })(TodaysView);\n"]},"metadata":{},"sourceType":"module"}