{"ast":null,"code":"var _jsxFileName = \"/Users/vincentwnyamu/Documents/CodingPractice/React/weather-dashboard/src/components/ListView.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { weatherData } from '../actions';\n\nclass ListView extends Component {\n  componentDidUpdate() {\n    if (this.props.searchedItem.length && this.props.weather.length === 0) {\n      this.props.weatherData();\n    }\n  }\n\n  componentDidMount() {\n    this.unixToStandardConverter(1580596920);\n  }\n\n  unixToStandardConverter(unixTime) {\n    // UNIX Time to [DayOfWeek, Month, Day, Y, Military Time, Timezone ]\n    let unixTimeConverter = new Date(unixTime * 1000).toString().split(' '); // Extract Time From unixTimeConverter variable\n\n    let militaryTime = unixTimeConverter[4].split(':'); // Remove the 0s from the end of the military time\n\n    let militaryTimeShortened = `${militaryTime[0]}:${militaryTime[1]} `;\n\n    if (Number(`${militaryTimeShortened[0]}${militaryTimeShortened[1]}`) < 12) {\n      return `${militaryTimeShortened} am`;\n    } else {\n      return `${militaryTimeShortened} pm`;\n    } // return console.log(\n    //   Number(`${militaryTimeShortened[0]}${militaryTimeShortened[1]}`)\n    // );\n\n  }\n\n  renderInput() {\n    if (this.props.weather.length === 0) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Hi there\");\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Location: \", this.props.locationName), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Temperature: \", this.props.weather.data.currently.temperature), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Feels Like: \", this.props.weather.data.currently.apparentTemperature), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Sunset Time: \", this.props.weather.data.daily.data[0].sunsetTime), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Precipitation Probability:\", this.props.weather.data.currently.precipProbability), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"-------------------\"), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, this.props.weather.data.hourly.data[2].time, \" \"), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, this.props.weather.data.hourly.data[4].time, \" \"), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, this.props.weather.data.hourly.data[6].time, \" \"), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, this.props.weather.data.hourly.data[8].time, \" \"), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, this.props.weather.data.hourly.data[10].time, \" \"), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, this.props.weather.data.hourly.data[12].time, \" \"));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"ui container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, this.renderInput());\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    searchedItem: state.searchPhrase,\n    weather: state.weather,\n    locationName: state.clickedSearch\n  };\n};\n\nexport default connect(mapStateToProps, {\n  weatherData\n})(ListView);","map":{"version":3,"sources":["/Users/vincentwnyamu/Documents/CodingPractice/React/weather-dashboard/src/components/ListView.js"],"names":["React","Component","connect","weatherData","ListView","componentDidUpdate","props","searchedItem","length","weather","componentDidMount","unixToStandardConverter","unixTime","unixTimeConverter","Date","toString","split","militaryTime","militaryTimeShortened","Number","renderInput","locationName","data","currently","temperature","apparentTemperature","daily","sunsetTime","precipProbability","hourly","time","render","mapStateToProps","state","searchPhrase","clickedSearch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { weatherData } from '../actions';\n\nclass ListView extends Component {\n  componentDidUpdate() {\n    if (this.props.searchedItem.length && this.props.weather.length === 0) {\n      this.props.weatherData();\n    }\n  }\n\n  componentDidMount() {\n    this.unixToStandardConverter(1580596920);\n  }\n\n  unixToStandardConverter(unixTime) {\n    // UNIX Time to [DayOfWeek, Month, Day, Y, Military Time, Timezone ]\n    let unixTimeConverter = new Date(unixTime * 1000).toString().split(' ');\n\n    // Extract Time From unixTimeConverter variable\n    let militaryTime = unixTimeConverter[4].split(':');\n\n    // Remove the 0s from the end of the military time\n    let militaryTimeShortened = `${militaryTime[0]}:${militaryTime[1]} `;\n\n    if (Number(`${militaryTimeShortened[0]}${militaryTimeShortened[1]}`) < 12) {\n      return `${militaryTimeShortened} am`;\n    } else {\n      return `${militaryTimeShortened} pm`;\n    }\n\n    // return console.log(\n    //   Number(`${militaryTimeShortened[0]}${militaryTimeShortened[1]}`)\n    // );\n  }\n\n  renderInput() {\n    if (this.props.weather.length === 0) {\n      return <div>Hi there</div>;\n    }\n\n    return (\n      <div>\n        <h3>Location: {this.props.locationName}</h3>\n        <h3>Temperature: {this.props.weather.data.currently.temperature}</h3>\n        <h3>\n          Feels Like: {this.props.weather.data.currently.apparentTemperature}\n        </h3>\n        <h3>Sunset Time: {this.props.weather.data.daily.data[0].sunsetTime}</h3>\n        <h3>\n          Precipitation Probability:\n          {this.props.weather.data.currently.precipProbability}\n        </h3>\n        <h3>-------------------</h3>\n\n        <h3>{this.props.weather.data.hourly.data[2].time} </h3>\n        <h3>{this.props.weather.data.hourly.data[4].time} </h3>\n        <h3>{this.props.weather.data.hourly.data[6].time} </h3>\n        <h3>{this.props.weather.data.hourly.data[8].time} </h3>\n        <h3>{this.props.weather.data.hourly.data[10].time} </h3>\n        <h3>{this.props.weather.data.hourly.data[12].time} </h3>\n      </div>\n    );\n  }\n\n  render() {\n    return <div className=\"ui container\">{this.renderInput()}</div>;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    searchedItem: state.searchPhrase,\n    weather: state.weather,\n    locationName: state.clickedSearch\n  };\n};\n\nexport default connect(mapStateToProps, { weatherData })(ListView);\n"]},"metadata":{},"sourceType":"module"}