{"ast":null,"code":"var _jsxFileName = \"/Users/vincentwnyamu/Documents/CodingPractice/React/weather-dashboard/src/components/DailyView.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { unixToDay, decimalToPercent, unixToStandardConverter } from './Util';\n\nclass DailyView extends Component {\n  componentDidUpdate() {// let sevenDayData = this.props.weatherDailyData.daily.data;\n    // sevenDayData = sevenDayData.slice(1);\n    // console.log(sevenDayData);\n    // console.log(unixToDay(sevenDayData[0].time, 'Date'));\n    // console.log(sevenDayData[0].time);\n  }\n\n  renderInput() {\n    if (Object.keys(this.props.weatherData).length === 0) {\n      return 'Daily View';\n    } else if (Object.keys(this.props.weatherData).length > 0) {\n      let sevenDayData = this.props.weatherDailyData.daily.data;\n      console.log(sevenDayData); // sevenDayData = sevenDayData;\n\n      return sevenDayData.map((day, index) => React.createElement(\"div\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, unixToDay(day.time, 'Date'))));\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, this.renderInput());\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    weatherData: state.weather,\n    weatherDailyData: state.weather.data\n  };\n};\n\nexport default connect(mapStateToProps)(DailyView);","map":{"version":3,"sources":["/Users/vincentwnyamu/Documents/CodingPractice/React/weather-dashboard/src/components/DailyView.js"],"names":["React","Component","connect","unixToDay","decimalToPercent","unixToStandardConverter","DailyView","componentDidUpdate","renderInput","Object","keys","props","weatherData","length","sevenDayData","weatherDailyData","daily","data","console","log","map","day","index","time","render","mapStateToProps","state","weather"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,EAAoBC,gBAApB,EAAsCC,uBAAtC,QAAqE,QAArE;;AAEA,MAAMC,SAAN,SAAwBL,SAAxB,CAAkC;AAChCM,EAAAA,kBAAkB,GAAG,CACnB;AACA;AACA;AACA;AACA;AACD;;AAEDC,EAAAA,WAAW,GAAG;AACZ,QAAIC,MAAM,CAACC,IAAP,CAAY,KAAKC,KAAL,CAAWC,WAAvB,EAAoCC,MAApC,KAA+C,CAAnD,EAAsD;AACpD,aAAO,YAAP;AACD,KAFD,MAEO,IAAIJ,MAAM,CAACC,IAAP,CAAY,KAAKC,KAAL,CAAWC,WAAvB,EAAoCC,MAApC,GAA6C,CAAjD,EAAoD;AACzD,UAAIC,YAAY,GAAG,KAAKH,KAAL,CAAWI,gBAAX,CAA4BC,KAA5B,CAAkCC,IAArD;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,YAAZ,EAFyD,CAIzD;;AACA,aAAOA,YAAY,CAACM,GAAb,CAAiB,CAACC,GAAD,EAAMC,KAAN,KACtB;AAAK,QAAA,GAAG,EAAEA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKnB,SAAS,CAACkB,GAAG,CAACE,IAAL,EAAW,MAAX,CAAd,CADF,CADK,CAAP;AAKD;AACF;;AAEDC,EAAAA,MAAM,GAAG;AACP,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKhB,WAAL,EAAN,CAAP;AACD;;AA3B+B;;AA8BlC,MAAMiB,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AAAEd,IAAAA,WAAW,EAAEc,KAAK,CAACC,OAArB;AAA8BZ,IAAAA,gBAAgB,EAAEW,KAAK,CAACC,OAAN,CAAcV;AAA9D,GAAP;AACD,CAFD;;AAIA,eAAef,OAAO,CAACuB,eAAD,CAAP,CAAyBnB,SAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { unixToDay, decimalToPercent, unixToStandardConverter } from './Util';\n\nclass DailyView extends Component {\n  componentDidUpdate() {\n    // let sevenDayData = this.props.weatherDailyData.daily.data;\n    // sevenDayData = sevenDayData.slice(1);\n    // console.log(sevenDayData);\n    // console.log(unixToDay(sevenDayData[0].time, 'Date'));\n    // console.log(sevenDayData[0].time);\n  }\n\n  renderInput() {\n    if (Object.keys(this.props.weatherData).length === 0) {\n      return 'Daily View';\n    } else if (Object.keys(this.props.weatherData).length > 0) {\n      let sevenDayData = this.props.weatherDailyData.daily.data;\n      console.log(sevenDayData);\n\n      // sevenDayData = sevenDayData;\n      return sevenDayData.map((day, index) => (\n        <div key={index}>\n          <h3>{unixToDay(day.time, 'Date')}</h3>\n        </div>\n      ));\n    }\n  }\n\n  render() {\n    return <div>{this.renderInput()}</div>;\n  }\n}\n\nconst mapStateToProps = state => {\n  return { weatherData: state.weather, weatherDailyData: state.weather.data };\n};\n\nexport default connect(mapStateToProps)(DailyView);\n"]},"metadata":{},"sourceType":"module"}