{"ast":null,"code":"var _jsxFileName = \"/Users/vincentwnyamu/Documents/CodingPractice/React/weather-dashboard/src/components/PlacesAutoComplete.js\";\nimport React, { Component } from 'react';\nimport GooglePlacesAutocomplete from 'react-google-places-autocomplete'; // import { geocodeByPlaceId } from 'react-google-places-autocomplete';\n// If you want to use the provided css\n\nimport 'react-google-places-autocomplete/dist/assets/index.css';\nimport { connect } from 'react-redux';\nimport { searchPhrase } from '../actions';\n\nclass PlacesAutoComplete extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderError = ({\n      error,\n      touched\n    }) => {\n      if (error && touched) {\n        return React.createElement(\"div\", {\n          className: \"ui error message\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 13\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"header\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14\n          },\n          __self: this\n        }, error));\n      }\n    };\n\n    this.renderButtonColor = () => {\n      // if (error && touched) {\n      //   return <button className=\"ui button red\">Search</button>;\n      // }\n      return React.createElement(\"button\", {\n        // onClick={({ description }) => this.props.searchPhrase(description)}\n        onClick: () => console.log(value),\n        className: \"ui button green\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"Search\");\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"ui container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ui fluid action input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(GooglePlacesAutocomplete, {\n      autocompletionRequest: {\n        types: ['(regions)']\n      },\n      onSelect: ({\n        description\n      }) => this.props.searchPhrase(description),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), this.renderButtonColor()));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    state: state\n  };\n};\n\nexport default connect(mapStateToProps, {\n  searchPhrase\n})(PlacesAutoComplete);","map":{"version":3,"sources":["/Users/vincentwnyamu/Documents/CodingPractice/React/weather-dashboard/src/components/PlacesAutoComplete.js"],"names":["React","Component","GooglePlacesAutocomplete","connect","searchPhrase","PlacesAutoComplete","renderError","error","touched","renderButtonColor","console","log","value","render","types","description","props","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,wBAAP,MAAqC,kCAArC,C,CACA;AACA;;AACA,OAAO,wDAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,YAA7B;;AAEA,MAAMC,kBAAN,SAAiCJ,SAAjC,CAA2C;AAAA;AAAA;;AAAA,SACzCK,WADyC,GAC3B,CAAC;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAD,KAAwB;AACpC,UAAID,KAAK,IAAIC,OAAb,EAAsB;AACpB,eACE;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAyBD,KAAzB,CADF,CADF;AAKD;AACF,KATwC;;AAAA,SAWzCE,iBAXyC,GAWrB,MAAM;AACxB;AACA;AACA;AAEA,aACE;AACE;AACA,QAAA,OAAO,EAAE,MAAMC,OAAO,CAACC,GAAR,CAAYC,KAAZ,CAFjB;AAGE,QAAA,SAAS,EAAC,iBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF;AASD,KAzBwC;AAAA;;AA0BzCC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,wBAAD;AACE,MAAA,qBAAqB,EAAE;AAAEC,QAAAA,KAAK,EAAE,CAAC,WAAD;AAAT,OADzB;AAEE,MAAA,QAAQ,EAAE,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAqB,KAAKC,KAAL,CAAWZ,YAAX,CAAwBW,WAAxB,CAFjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAKG,KAAKN,iBAAL,EALH,CADF,CADF;AAWD;;AAtCwC;;AAyC3C,MAAMQ,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AAAEA,IAAAA,KAAK,EAAEA;AAAT,GAAP;AACD,CAFD;;AAIA,eAAef,OAAO,CAACc,eAAD,EAAkB;AAAEb,EAAAA;AAAF,CAAlB,CAAP,CAA2CC,kBAA3C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport GooglePlacesAutocomplete from 'react-google-places-autocomplete';\n// import { geocodeByPlaceId } from 'react-google-places-autocomplete';\n// If you want to use the provided css\nimport 'react-google-places-autocomplete/dist/assets/index.css';\nimport { connect } from 'react-redux';\nimport { searchPhrase } from '../actions';\n\nclass PlacesAutoComplete extends Component {\n  renderError = ({ error, touched }) => {\n    if (error && touched) {\n      return (\n        <div className=\"ui error message\">\n          <div className=\"header\">{error}</div>\n        </div>\n      );\n    }\n  };\n\n  renderButtonColor = () => {\n    // if (error && touched) {\n    //   return <button className=\"ui button red\">Search</button>;\n    // }\n\n    return (\n      <button\n        // onClick={({ description }) => this.props.searchPhrase(description)}\n        onClick={() => console.log(value)}\n        className=\"ui button green\"\n      >\n        Search\n      </button>\n    );\n  };\n  render() {\n    return (\n      <div className=\"ui container\">\n        <div className=\"ui fluid action input\">\n          <GooglePlacesAutocomplete\n            autocompletionRequest={{ types: ['(regions)'] }}\n            onSelect={({ description }) => this.props.searchPhrase(description)}\n          />\n          {this.renderButtonColor()}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return { state: state };\n};\n\nexport default connect(mapStateToProps, { searchPhrase })(PlacesAutoComplete);\n"]},"metadata":{},"sourceType":"module"}