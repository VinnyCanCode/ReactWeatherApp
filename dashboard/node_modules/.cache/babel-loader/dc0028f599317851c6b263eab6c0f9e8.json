{"ast":null,"code":"var _jsxFileName = \"/Users/vincentwnyamu/Documents/CodingPractice/React/weather-dashboard/src/components/TodaysView.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { weatherData } from '../actions';\nimport WeatherIcon from './WeatherIcon';\nimport { unixToDay, unixToStandardConverter, decimalToPercent } from './Util';\n\nclass TodaysView extends Component {\n  componentDidUpdate(prevState) {\n    if (this.props.searchedItem.length !== 0) {\n      if (this.props.weather === prevState.weather) {\n        this.props.weatherData();\n      }\n    }\n  }\n\n  renderInput() {\n    if (Object.keys(this.props.weather).length === 0) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, \"Hi there\");\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"Today: \", unixToDay(this.props.weather.data.currently.time, 'Date')), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"Location: \", this.props.locationName), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Temperature:\", ' ', Math.round(this.props.weather.data.currently.temperature), \"\\xB0 F\"), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Feels Like\", ' ', Math.round(this.props.weather.data.currently.apparentTemperature)), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Sunset Time:\", ' ', unixToStandardConverter(this.props.weather.data.daily.data[0].sunsetTime)), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"-------------------\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Chance of rain\"), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, unixToStandardConverter(this.props.weather.data.hourly.data[2].time), \":\", ' ', decimalToPercent(this.props.weather.data.hourly.data[2].precipProbability)), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, unixToStandardConverter(this.props.weather.data.hourly.data[4].time), \":\", decimalToPercent(this.props.weather.data.hourly.data[4].precipProbability)), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, unixToStandardConverter(this.props.weather.data.hourly.data[6].time), \":\", decimalToPercent(this.props.weather.data.hourly.data[6].precipProbability)), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, unixToStandardConverter(this.props.weather.data.hourly.data[8].time), \":\", decimalToPercent(this.props.weather.data.hourly.data[8].precipProbability)), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, unixToStandardConverter(this.props.weather.data.hourly.data[10].time), \":\", decimalToPercent(this.props.weather.data.hourly.data[10].precipProbability)), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, unixToStandardConverter(this.props.weather.data.hourly.data[12].time), \":\", decimalToPercent(this.props.weather.data.hourly.data[12].precipProbability)));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, this.renderInput());\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    searchedItem: state.searchPhrase,\n    weather: state.weather,\n    locationName: state.clickedSearch\n  };\n};\n\nexport default connect(mapStateToProps, {\n  weatherData\n})(TodaysView);","map":{"version":3,"sources":["/Users/vincentwnyamu/Documents/CodingPractice/React/weather-dashboard/src/components/TodaysView.js"],"names":["React","Component","connect","weatherData","WeatherIcon","unixToDay","unixToStandardConverter","decimalToPercent","TodaysView","componentDidUpdate","prevState","props","searchedItem","length","weather","renderInput","Object","keys","data","currently","time","locationName","Math","round","temperature","apparentTemperature","daily","sunsetTime","hourly","precipProbability","render","mapStateToProps","state","searchPhrase","clickedSearch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { weatherData } from '../actions';\nimport WeatherIcon from './WeatherIcon';\nimport { unixToDay, unixToStandardConverter, decimalToPercent } from './Util';\n\nclass TodaysView extends Component {\n  componentDidUpdate(prevState) {\n    if (this.props.searchedItem.length !== 0) {\n      if (this.props.weather === prevState.weather) {\n        this.props.weatherData();\n      }\n    }\n  }\n\n  renderInput() {\n    if (Object.keys(this.props.weather).length === 0) {\n      return <div>Hi there</div>;\n    }\n\n    return (\n      <div>\n        <h3>\n          Today: {unixToDay(this.props.weather.data.currently.time, 'Date')}\n        </h3>\n        <h3>Location: {this.props.locationName}</h3>\n        <h3>\n          Temperature:{' '}\n          {Math.round(this.props.weather.data.currently.temperature)}Â° F\n        </h3>\n        <h3>\n          {/* Icon: <WeatherIcon icon={this.props.weather.data.currently.icon} /> */}\n        </h3>\n        <h3>\n          Feels Like{' '}\n          {Math.round(this.props.weather.data.currently.apparentTemperature)}\n        </h3>\n        <h3>\n          Sunset Time:{' '}\n          {unixToStandardConverter(\n            this.props.weather.data.daily.data[0].sunsetTime\n          )}\n        </h3>\n\n        <h3>-------------------</h3>\n\n        <h2>Chance of rain</h2>\n        <h3>\n          {unixToStandardConverter(this.props.weather.data.hourly.data[2].time)}\n          :{' '}\n          {decimalToPercent(\n            this.props.weather.data.hourly.data[2].precipProbability\n          )}\n        </h3>\n        <h3>\n          {unixToStandardConverter(this.props.weather.data.hourly.data[4].time)}\n          :\n          {decimalToPercent(\n            this.props.weather.data.hourly.data[4].precipProbability\n          )}\n        </h3>\n        <h3>\n          {unixToStandardConverter(this.props.weather.data.hourly.data[6].time)}\n          :\n          {decimalToPercent(\n            this.props.weather.data.hourly.data[6].precipProbability\n          )}\n        </h3>\n        <h3>\n          {unixToStandardConverter(this.props.weather.data.hourly.data[8].time)}\n          :\n          {decimalToPercent(\n            this.props.weather.data.hourly.data[8].precipProbability\n          )}\n        </h3>\n        <h3>\n          {unixToStandardConverter(\n            this.props.weather.data.hourly.data[10].time\n          )}\n          :\n          {decimalToPercent(\n            this.props.weather.data.hourly.data[10].precipProbability\n          )}\n        </h3>\n        <h3>\n          {unixToStandardConverter(\n            this.props.weather.data.hourly.data[12].time\n          )}\n          :\n          {decimalToPercent(\n            this.props.weather.data.hourly.data[12].precipProbability\n          )}\n        </h3>\n      </div>\n    );\n  }\n\n  render() {\n    return <div>{this.renderInput()}</div>;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    searchedItem: state.searchPhrase,\n    weather: state.weather,\n    locationName: state.clickedSearch\n  };\n};\n\nexport default connect(mapStateToProps, { weatherData })(TodaysView);\n"]},"metadata":{},"sourceType":"module"}