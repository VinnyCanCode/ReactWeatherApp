{"ast":null,"code":"var _jsxFileName = \"/Users/vincentwnyamu/Documents/CodingPractice/React/weather-dashboard/dashboard/src/components/HighlightedCities.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchHighlightedCity } from '../actions';\n\nclass HighlightedCities extends Component {\n  componentDidMount() {\n    this.props.fetchHighlightedCity();\n  }\n\n  renderRandomCities() {\n    if (!this.props.highlightedCities) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, \"Loading...\");\n    }\n\n    let randomCities = [];\n\n    for (let i = 0; randomCities.length < 3; i++) {\n      if (randomCities === 0) {\n        let randomNumber = Math.floor(Math.random() * 39);\n        randomCities.push(this.props.highlightedCities[randomNumber]);\n        i++;\n      }\n\n      let randomNumber = Math.floor(Math.random() * 39);\n      randomCities.push(this.props.highlightedCities[randomNumber]);\n      console.log(randomCities);\n      i++;\n    }\n\n    return randomCities.map(city => React.createElement(\"div\", {\n      className: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ui fluid card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"image\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      style: {\n        height: '300px',\n        width: '100%'\n      },\n      src: city.picture,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: {\n        textAlign: 'center'\n      },\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, city.cityName))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    })));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"ui four column grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, this.renderRandomCities());\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    highlightedCities: state.fetchCities\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchHighlightedCity\n})(HighlightedCities);","map":{"version":3,"sources":["/Users/vincentwnyamu/Documents/CodingPractice/React/weather-dashboard/dashboard/src/components/HighlightedCities.js"],"names":["React","Component","connect","fetchHighlightedCity","HighlightedCities","componentDidMount","props","renderRandomCities","highlightedCities","randomCities","i","length","randomNumber","Math","floor","random","push","console","log","map","city","height","width","picture","textAlign","cityName","render","mapStateToProps","state","fetchCities"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,oBAAT,QAAqC,YAArC;;AAEA,MAAMC,iBAAN,SAAgCH,SAAhC,CAA0C;AACxCI,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWH,oBAAX;AACD;;AAEDI,EAAAA,kBAAkB,GAAG;AACnB,QAAI,CAAC,KAAKD,KAAL,CAAWE,iBAAhB,EAAmC;AACjC,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD;;AAED,QAAIC,YAAY,GAAG,EAAnB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBD,YAAY,CAACE,MAAb,GAAsB,CAAtC,EAAyCD,CAAC,EAA1C,EAA8C;AAC5C,UAAID,YAAY,KAAK,CAArB,EAAwB;AACtB,YAAIG,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,CAAnB;AACAN,QAAAA,YAAY,CAACO,IAAb,CAAkB,KAAKV,KAAL,CAAWE,iBAAX,CAA6BI,YAA7B,CAAlB;AACAF,QAAAA,CAAC;AACF;;AACD,UAAIE,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,CAAnB;AACAN,MAAAA,YAAY,CAACO,IAAb,CAAkB,KAAKV,KAAL,CAAWE,iBAAX,CAA6BI,YAA7B,CAAlB;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYT,YAAZ;AACAC,MAAAA,CAAC;AACF;;AAED,WAAOD,YAAY,CAACU,GAAb,CAAiBC,IAAI,IAC1B;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,KAAK,EAAE;AACLC,QAAAA,MAAM,EAAE,OADH;AAELC,QAAAA,KAAK,EAAE;AAFF,OADT;AAKE,MAAA,GAAG,EAAEF,IAAI,CAACG,OALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAUE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAZ;AAAqC,MAAA,SAAS,EAAC,SAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuBJ,IAAI,CAACK,QAA5B,CADF,CAVF,CADF,EAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfF,EAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBF,CADK,CAAP;AAoBD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsC,KAAKnB,kBAAL,EAAtC,CADF;AAGD;;AAjDuC;;AAoD1C,MAAMoB,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AAAEpB,IAAAA,iBAAiB,EAAEoB,KAAK,CAACC;AAA3B,GAAP;AACD,CAFD;;AAIA,eAAe3B,OAAO,CAACyB,eAAD,EAAkB;AAAExB,EAAAA;AAAF,CAAlB,CAAP,CACbC,iBADa,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchHighlightedCity } from '../actions';\n\nclass HighlightedCities extends Component {\n  componentDidMount() {\n    this.props.fetchHighlightedCity();\n  }\n\n  renderRandomCities() {\n    if (!this.props.highlightedCities) {\n      return <div>Loading...</div>;\n    }\n\n    let randomCities = [];\n    for (let i = 0; randomCities.length < 3; i++) {\n      if (randomCities === 0) {\n        let randomNumber = Math.floor(Math.random() * 39);\n        randomCities.push(this.props.highlightedCities[randomNumber]);\n        i++;\n      }\n      let randomNumber = Math.floor(Math.random() * 39);\n      randomCities.push(this.props.highlightedCities[randomNumber]);\n      console.log(randomCities);\n      i++;\n    }\n\n    return randomCities.map(city => (\n      <div className=\"column\">\n        <div className=\"ui fluid card\">\n          <div className=\"image\">\n            <img\n              style={{\n                height: '300px',\n                width: '100%'\n              }}\n              src={city.picture}\n            />\n          </div>\n          <div style={{ textAlign: 'center' }} className=\"content\">\n            <a className=\"header\">{city.cityName}</a>\n          </div>\n        </div>\n        <br />\n        <br />\n      </div>\n    ));\n  }\n\n  render() {\n    return (\n      <div className=\"ui four column grid\">{this.renderRandomCities()}</div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return { highlightedCities: state.fetchCities };\n};\n\nexport default connect(mapStateToProps, { fetchHighlightedCity })(\n  HighlightedCities\n);\n"]},"metadata":{},"sourceType":"module"}