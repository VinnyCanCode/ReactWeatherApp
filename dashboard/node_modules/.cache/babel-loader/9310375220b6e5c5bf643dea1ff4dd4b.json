{"ast":null,"code":"var _jsxFileName = \"/Users/vincentwnyamu/Documents/CodingPractice/React/weather-dashboard/dashboard/src/components/DailyView.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { unixToDay, decimalToPercent } from './Util';\nimport WeatherIcon from './WeatherIcon';\n\nclass DailyView extends Component {\n  componentDidUpdate() {// let sevenDayData = this.props.weatherDailyData.daily.data;\n    // sevenDayData = sevenDayData.slice(1);\n    // console.log(sevenDayData);\n    // console.log(unixToDay(sevenDayData[0].time, 'Date'));\n    // console.log(sevenDayData[0].time);\n  }\n\n  renderInput() {\n    if (Object.keys(this.props.weatherData).length === 0) {\n      return 'Daily View';\n    }\n\n    let sevenDayData = this.props.weatherDailyData.daily.data;\n    sevenDayData = sevenDayData.slice(1);\n    return sevenDayData.map((day, index) => React.createElement(\"div\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, unixToDay(day.time, 'Day')), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"rainDropIcon: \", decimalToPercent(day.precipProbability), \"% \"), React.createElement(WeatherIcon, {\n      icon: day.icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"TempLow: \", Math.round(day.temperatureLow), \"\\xB0F || TempHigh:\", ' ', Math.round(day.temperatureHigh), \"\\xB0F\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    })));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, this.renderInput());\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    weatherData: state.weather,\n    weatherDailyData: state.weather.data\n  };\n};\n\nexport default connect(mapStateToProps)(DailyView);","map":{"version":3,"sources":["/Users/vincentwnyamu/Documents/CodingPractice/React/weather-dashboard/dashboard/src/components/DailyView.js"],"names":["React","Component","connect","unixToDay","decimalToPercent","WeatherIcon","DailyView","componentDidUpdate","renderInput","Object","keys","props","weatherData","length","sevenDayData","weatherDailyData","daily","data","slice","map","day","index","time","precipProbability","icon","Math","round","temperatureLow","temperatureHigh","render","mapStateToProps","state","weather"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,EAAoBC,gBAApB,QAA4C,QAA5C;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,SAAN,SAAwBL,SAAxB,CAAkC;AAChCM,EAAAA,kBAAkB,GAAG,CACnB;AACA;AACA;AACA;AACA;AACD;;AAEDC,EAAAA,WAAW,GAAG;AACZ,QAAIC,MAAM,CAACC,IAAP,CAAY,KAAKC,KAAL,CAAWC,WAAvB,EAAoCC,MAApC,KAA+C,CAAnD,EAAsD;AACpD,aAAO,YAAP;AACD;;AAED,QAAIC,YAAY,GAAG,KAAKH,KAAL,CAAWI,gBAAX,CAA4BC,KAA5B,CAAkCC,IAArD;AACAH,IAAAA,YAAY,GAAGA,YAAY,CAACI,KAAb,CAAmB,CAAnB,CAAf;AACA,WAAOJ,YAAY,CAACK,GAAb,CAAiB,CAACC,GAAD,EAAMC,KAAN,KACtB;AAAK,MAAA,GAAG,EAAEA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKlB,SAAS,CAACiB,GAAG,CAACE,IAAL,EAAW,KAAX,CAAd,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAmBlB,gBAAgB,CAACgB,GAAG,CAACG,iBAAL,CAAnC,OAFF,EAGE,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAEH,GAAG,CAACI,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACYC,IAAI,CAACC,KAAL,CAAWN,GAAG,CAACO,cAAf,CADZ,wBAC2D,GAD3D,EAEGF,IAAI,CAACC,KAAL,CAAWN,GAAG,CAACQ,eAAf,CAFH,UAJF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CADK,CAAP;AAYD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKrB,WAAL,EAAN,CAAP;AACD;;AAhC+B;;AAmClC,MAAMsB,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AAAEnB,IAAAA,WAAW,EAAEmB,KAAK,CAACC,OAArB;AAA8BjB,IAAAA,gBAAgB,EAAEgB,KAAK,CAACC,OAAN,CAAcf;AAA9D,GAAP;AACD,CAFD;;AAIA,eAAef,OAAO,CAAC4B,eAAD,CAAP,CAAyBxB,SAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { unixToDay, decimalToPercent } from './Util';\nimport WeatherIcon from './WeatherIcon';\n\nclass DailyView extends Component {\n  componentDidUpdate() {\n    // let sevenDayData = this.props.weatherDailyData.daily.data;\n    // sevenDayData = sevenDayData.slice(1);\n    // console.log(sevenDayData);\n    // console.log(unixToDay(sevenDayData[0].time, 'Date'));\n    // console.log(sevenDayData[0].time);\n  }\n\n  renderInput() {\n    if (Object.keys(this.props.weatherData).length === 0) {\n      return 'Daily View';\n    }\n\n    let sevenDayData = this.props.weatherDailyData.daily.data;\n    sevenDayData = sevenDayData.slice(1);\n    return sevenDayData.map((day, index) => (\n      <div key={index}>\n        <h1>{unixToDay(day.time, 'Day')}</h1>\n        <h4>rainDropIcon: {decimalToPercent(day.precipProbability)}% </h4>\n        <WeatherIcon icon={day.icon} />\n        <h4>\n          TempLow: {Math.round(day.temperatureLow)}°F || TempHigh:{' '}\n          {Math.round(day.temperatureHigh)}°F\n        </h4>\n        <br />\n      </div>\n    ));\n  }\n\n  render() {\n    return <div>{this.renderInput()}</div>;\n  }\n}\n\nconst mapStateToProps = state => {\n  return { weatherData: state.weather, weatherDailyData: state.weather.data };\n};\n\nexport default connect(mapStateToProps)(DailyView);\n"]},"metadata":{},"sourceType":"module"}