{"ast":null,"code":"var _jsxFileName = \"/Users/vincentwnyamu/Documents/CodingPractice/React/weather-dashboard/dashboard/src/components/WeatherIcon.js\";\nimport React from 'react';\nimport ReactAnimatedWeather from 'react-animated-weather';\n\nconst typeOfIcon = icon => {\n  switch (icon.toUpperCase()) {\n    case 'CLEAR-DAY':\n      return 'CLEAR_DAY';\n\n    case 'CLEAR-NIGHT':\n      return 'CLEAR_NIGHT';\n\n    case 'PARTLY-CLOUDY-DAY':\n      return 'PARTLY_CLOUDY_DAY';\n\n    case 'PARTLY-CLOUDY-NIGHT':\n      return 'PARTLY_CLOUDY_NIGHT';\n\n    case 'CLOUDY':\n      return 'CLOUDY';\n\n    case 'RAIN':\n      return 'RAIN';\n\n    case 'SLEET':\n      return 'SLEET';\n\n    case 'SNOW':\n      return 'SNOW';\n\n    case 'WIND':\n      return 'WIND';\n\n    case 'FOG':\n      return 'FOG';\n\n    default:\n      break;\n  }\n};\n\nconst colors = {\n  main: opts.colors.main || '#111',\n  moon: opts.colors.moon || '#353545',\n  fog: opts.colors.fog || '#CCC',\n  fogbank: opts.colors.fogbank || '#AAA',\n  light_cloud: opts.colors.light_cloud || '#888',\n  cloud: opts.colors.cloud || '#666',\n  dark_cloud: opts.colors.dark_cloud || '#444',\n  thunder: opts.colors.thunder || '#FF0',\n  snow: opts.colors.snow || '#C2EEFF',\n  hail: opts.colors.hail || '#CCF',\n  sleet: opts.colors.sleet || '#C2EEFF',\n  wind: opts.colors.wind || '#777',\n  leaf: opts.colors.leaf || '#2C5228',\n  rain: opts.colors.rain || '#7FDBFF',\n  sun: opts.colors.sun || '#FFDC00'\n};\n\nconst WeatherIcon = props => {\n  if (!props.icon) {\n    return `Loading...`;\n  }\n\n  console.log(typeOfIcon(props.icon));\n  return React.createElement(ReactAnimatedWeather, {\n    icon: `${typeOfIcon(props.icon)}`,\n    color: colors.props.icon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  });\n};\n\nexport default WeatherIcon;","map":{"version":3,"sources":["/Users/vincentwnyamu/Documents/CodingPractice/React/weather-dashboard/dashboard/src/components/WeatherIcon.js"],"names":["React","ReactAnimatedWeather","typeOfIcon","icon","toUpperCase","colors","main","opts","moon","fog","fogbank","light_cloud","cloud","dark_cloud","thunder","snow","hail","sleet","wind","leaf","rain","sun","WeatherIcon","props","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;;AAEA,MAAMC,UAAU,GAAGC,IAAI,IAAI;AACzB,UAAQA,IAAI,CAACC,WAAL,EAAR;AACE,SAAK,WAAL;AACE,aAAO,WAAP;;AACF,SAAK,aAAL;AACE,aAAO,aAAP;;AACF,SAAK,mBAAL;AACE,aAAO,mBAAP;;AACF,SAAK,qBAAL;AACE,aAAO,qBAAP;;AACF,SAAK,QAAL;AACE,aAAO,QAAP;;AACF,SAAK,MAAL;AACE,aAAO,MAAP;;AACF,SAAK,OAAL;AACE,aAAO,OAAP;;AACF,SAAK,MAAL;AACE,aAAO,MAAP;;AACF,SAAK,MAAL;AACE,aAAO,MAAP;;AACF,SAAK,KAAL;AACE,aAAO,KAAP;;AACF;AACE;AAtBJ;AAwBD,CAzBD;;AA2BA,MAAMC,MAAM,GAAG;AACbC,EAAAA,IAAI,EAAEC,IAAI,CAACF,MAAL,CAAYC,IAAZ,IAAoB,MADb;AAEbE,EAAAA,IAAI,EAAED,IAAI,CAACF,MAAL,CAAYG,IAAZ,IAAoB,SAFb;AAGbC,EAAAA,GAAG,EAAEF,IAAI,CAACF,MAAL,CAAYI,GAAZ,IAAmB,MAHX;AAIbC,EAAAA,OAAO,EAAEH,IAAI,CAACF,MAAL,CAAYK,OAAZ,IAAuB,MAJnB;AAKbC,EAAAA,WAAW,EAAEJ,IAAI,CAACF,MAAL,CAAYM,WAAZ,IAA2B,MAL3B;AAMbC,EAAAA,KAAK,EAAEL,IAAI,CAACF,MAAL,CAAYO,KAAZ,IAAqB,MANf;AAObC,EAAAA,UAAU,EAAEN,IAAI,CAACF,MAAL,CAAYQ,UAAZ,IAA0B,MAPzB;AAQbC,EAAAA,OAAO,EAAEP,IAAI,CAACF,MAAL,CAAYS,OAAZ,IAAuB,MARnB;AASbC,EAAAA,IAAI,EAAER,IAAI,CAACF,MAAL,CAAYU,IAAZ,IAAoB,SATb;AAUbC,EAAAA,IAAI,EAAET,IAAI,CAACF,MAAL,CAAYW,IAAZ,IAAoB,MAVb;AAWbC,EAAAA,KAAK,EAAEV,IAAI,CAACF,MAAL,CAAYY,KAAZ,IAAqB,SAXf;AAYbC,EAAAA,IAAI,EAAEX,IAAI,CAACF,MAAL,CAAYa,IAAZ,IAAoB,MAZb;AAabC,EAAAA,IAAI,EAAEZ,IAAI,CAACF,MAAL,CAAYc,IAAZ,IAAoB,SAbb;AAcbC,EAAAA,IAAI,EAAEb,IAAI,CAACF,MAAL,CAAYe,IAAZ,IAAoB,SAdb;AAebC,EAAAA,GAAG,EAAEd,IAAI,CAACF,MAAL,CAAYgB,GAAZ,IAAmB;AAfX,CAAf;;AAkBA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAC3B,MAAI,CAACA,KAAK,CAACpB,IAAX,EAAiB;AACf,WAAQ,YAAR;AACD;;AAEDqB,EAAAA,OAAO,CAACC,GAAR,CAAYvB,UAAU,CAACqB,KAAK,CAACpB,IAAP,CAAtB;AACA,SACE,oBAAC,oBAAD;AACE,IAAA,IAAI,EAAG,GAAED,UAAU,CAACqB,KAAK,CAACpB,IAAP,CAAa,EADlC;AAEE,IAAA,KAAK,EAAEE,MAAM,CAACkB,KAAP,CAAapB,IAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAMD,CAZD;;AAcA,eAAemB,WAAf","sourcesContent":["import React from 'react';\nimport ReactAnimatedWeather from 'react-animated-weather';\n\nconst typeOfIcon = icon => {\n  switch (icon.toUpperCase()) {\n    case 'CLEAR-DAY':\n      return 'CLEAR_DAY';\n    case 'CLEAR-NIGHT':\n      return 'CLEAR_NIGHT';\n    case 'PARTLY-CLOUDY-DAY':\n      return 'PARTLY_CLOUDY_DAY';\n    case 'PARTLY-CLOUDY-NIGHT':\n      return 'PARTLY_CLOUDY_NIGHT';\n    case 'CLOUDY':\n      return 'CLOUDY';\n    case 'RAIN':\n      return 'RAIN';\n    case 'SLEET':\n      return 'SLEET';\n    case 'SNOW':\n      return 'SNOW';\n    case 'WIND':\n      return 'WIND';\n    case 'FOG':\n      return 'FOG';\n    default:\n      break;\n  }\n};\n\nconst colors = {\n  main: opts.colors.main || '#111',\n  moon: opts.colors.moon || '#353545',\n  fog: opts.colors.fog || '#CCC',\n  fogbank: opts.colors.fogbank || '#AAA',\n  light_cloud: opts.colors.light_cloud || '#888',\n  cloud: opts.colors.cloud || '#666',\n  dark_cloud: opts.colors.dark_cloud || '#444',\n  thunder: opts.colors.thunder || '#FF0',\n  snow: opts.colors.snow || '#C2EEFF',\n  hail: opts.colors.hail || '#CCF',\n  sleet: opts.colors.sleet || '#C2EEFF',\n  wind: opts.colors.wind || '#777',\n  leaf: opts.colors.leaf || '#2C5228',\n  rain: opts.colors.rain || '#7FDBFF',\n  sun: opts.colors.sun || '#FFDC00'\n};\n\nconst WeatherIcon = props => {\n  if (!props.icon) {\n    return `Loading...`;\n  }\n\n  console.log(typeOfIcon(props.icon));\n  return (\n    <ReactAnimatedWeather\n      icon={`${typeOfIcon(props.icon)}`}\n      color={colors.props.icon}\n    />\n  );\n};\n\nexport default WeatherIcon;\n"]},"metadata":{},"sourceType":"module"}